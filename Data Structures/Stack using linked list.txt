#include <iostream>
#include <string>
#include <cmath> //cmath for ceil and floor functions tan of an angle also
#include <algorithm>
#include <iomanip>//for setprecision//    fixed<<////setprecision(value upto you want to precise)<<variable name;////
#include <vector>
#include<numeric>
#include <set> // to work with sets
#include <cstdlib>
#include <map>
#include <stdio.h>// for bitwise operators
#include <stdlib.h>
#include <unordered_set>
#include <math.h>// for pow() function

using namespace std;
typedef long long ll;
#define MAX 1000



// In stack push(), pop(), peek(), isEmpty() take O(1) time.
//stack can be implemented using array or linked list

//using linked list:
struct Node{
	int data;
	Node* next;
};

// let's first make top pointing to NULL(as our stack is empty)
Node* top=nullptr;
void push(int data){
	Node* temp= new Node();
	//if (temp)
	temp->data=data;
	temp->next=top;
	top=temp;
}
bool isEmpty(){
	if (top==nullptr) return true;
	return false;
}
int peek(){
	if (isEmpty()) return 0;
	return top->data;
}
void pop(){
	if (isEmpty()) return;
	Node* temp;
	temp=top;
	top=top->next;
	temp->next=nullptr;
	free(temp);
}
void display(){
	Node* temp=top;
	while(temp!=nullptr){
		cout<<temp->data<<" ";
		temp=temp->next;
	}
	cout<<endl;
}

int main(){
	push(11);
	push(12);
	push(13);
	push(14);
	display();
	
	cout<<peek()<<"\n";
	pop();
	pop();
	display();
	cout<<peek()<<"\n";

	return 0;
}